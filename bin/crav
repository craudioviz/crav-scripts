#!/usr/bin/env bash
set -euo pipefail

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"

usage() {
  cat <<USAGE
crav â€” helper for CRAV scripts

Usage:
  crav new <name>        Create scripts/<name>.sh with a starter template
  crav run <name>        Run scripts/<name>.sh
  crav push <msg>        Commit all changes with <msg> and push to origin/main
  crav health            Write/commit a timestamped .healthcheck and push
  crav sync              git pull --rebase; show status

Examples:
  crav new backup_db
  crav run backup_db
  crav push "feat: add backup_db script"
USAGE
}

ensure_repo() {
  cd "$ROOT"
  git rev-parse --git-dir >/dev/null 2>&1 || { echo "Not a git repo at $ROOT"; exit 1; }
}

cmd_new() {
  ensure_repo
  local name="${1:-}"
  [[ -z "$name" ]] && { echo "Specify a name: crav new <name>"; exit 1; }
  mkdir -p "$ROOT/scripts"
  local f="$ROOT/scripts/${name}.sh"
  if [[ -e "$f" ]]; then
    echo "File exists: scripts/${name}.sh"
  else
    cat > "$f" <<'TEMPLATE'
#!/usr/bin/env bash
set -euo pipefail

# === Describe what this script does ===
echo "Running: ${0##*/}"

# TODO: your commands here
# echo "Hello from <your-script>"

TEMPLATE
    chmod +x "$f"
    echo "Created scripts/${name}.sh"
  fi
}

cmd_run() {
  ensure_repo
  local name="${1:-}"
  [[ -z "$name" ]] && { echo "Specify a name: crav run <name>"; exit 1; }
  local f="$ROOT/scripts/${name}.sh"
  [[ -x "$f" ]] || { echo "Missing or not executable: scripts/${name}.sh"; exit 1; }
  "$f"
}

cmd_push() {
  ensure_repo
  local msg="${1:-}"
  [[ -z "$msg" ]] && { echo "Specify a commit message: crav push \"your message\""; exit 1; }
  git add -A
  git commit -m "$msg" || true
  git branch -M main
  git push -u origin main
}

cmd_health() {
  ensure_repo
  date +"%Y-%m-%d %H:%M:%S %Z" > "$ROOT/.healthcheck"
  git add .healthcheck
  git commit -m "chore: update healthcheck" || true
  git push -u origin main
  echo "Healthcheck updated."
}

cmd_sync() {
  ensure_repo
  git pull --rebase --autostash || true
  git status --short --branch
}

case "${1:-}" in
  new)    shift; cmd_new "$@";;
  run)    shift; cmd_run "$@";;
  push)   shift; cmd_push "$@";;
  health) shift; cmd_health;;
  sync)   shift; cmd_sync;;
  ""|-h|--help) usage;;
  *) echo "Unknown command: $1"; usage; exit 1;;
esac
